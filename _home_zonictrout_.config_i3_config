# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym F3 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym F2 exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym F1 exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym F9 exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

# start a terminal
bindsym $mod+Return exec xterm

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+i focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+i move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
	set $inc 5
        # These bindings trigger as soon as you enter the resize mode
        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width $inc px or $inc ppt
        bindsym k resize grow height $inc px or $inc ppt
        bindsym l resize shrink height $inc px or $inc ppt
        bindsym semicolon resize grow width $inc px or $inc ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width $inc px or $inc ppt
        bindsym Down resize grow height $inc px or $inc ppt
        bindsym Up resize shrink height $inc px or $inc ppt
        bindsym Right resize grow width $inc px or $inc ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        status_command i3status
}
# Custom Stuff

# ASUE is the touchpad
exec xinput set-prop 'ASUE140D:00 04F3:31B9 Touchpad' "libinput Tapping Enabled" 1
exec xinput set-prop 'ASUE140D:00 04F3:31B9 Touchpad' "libinput Accel Speed" 1


exec picom
exec nitrogen --restore 
exec /usr/bin/dunst

exec xterm
exec "xterm -e btop"


#exec firefox

# So that ir looks neater 
title_align center

# Custom Keybindings
bindsym F5 exec "brightnessctl set +5%"
bindsym F4 exec "brightnessctl set 5%-"

bindsym $mod+F5 mode "$brightness"
bindsym $mod+c mode "$launcher"

set $brightness :Arrow keys affect brightness | press 'k' for keybord settings
set $keyboardBrightness :Same keybinds as normal brightness, but for the backlight keyboard
set $launcher :Press 'g' for Steam Launcher


# border_radius 50


mode "$brightness" {
	bindsym Up exec "brightnessctl --device='intel_backlight' set +1%"
	bindsym Down exec "brightnessctl --device='intel_backlight' set 1%-"
	bindsym Right exec "brightnessctl --device='intel_backlight' set 100%"
	bindsym Left exec "brightnessctl --device='intel_backlight' set 1%"

	bindsym k mode "$keyboardBrightness"

	bindsym Escape mode "default"
	bindsym $mod+F5 mode "default"
}

mode "$keyboardBrightness" {
	# Keyboard backlight = 'asus::kbd_backlight'
        bindsym Up exec "brightnessctl --device='asus::kbd_backlight' set +1"
        bindsym Down exec "brightnessctl --device='asus::kbd_backlight' set 1-"
        bindsym Right exec "brightnessctl --device='asus::kbd_backlight' set 3"
        bindsym Left exec "brightnessctl --device='asus::kbd_backlight' set 0k"

	bindsym Escape mode "default"
	bindsym $mod+F5 mode "default"
	bindsym $mod+k mode "default"
}

mode "steamLauncher" {
	bindsym c exec "steam steam://rungameid/504230"
	bindsym c --release mode "default"
	
	bindsym p exec "steam steam://rungameid/1714040"
	bindsym p --release mode "default"
	
	bindsym f exec "steam steam://rungameid/319510"
	bindsym f --release mode "default"	
	
	bindsym z exec "env LUTRIS_SKIP_INIT=1 lutris lutris:rungameid/4"
	bindsym z --release mode "default"	
	
	bindsym o exec "steam steam://rungameid/420530"
	bindsym o --release mode "default"
	
	bindsym u exec "steam steam://rungameid/391540"
	bindsym u --release mode "default"

	bindsym s exec steam
	bindsym s --release mode "default"


	bindsym Left mode "launcher"
	bindsym Escape mode "default"
}

mode "$launcher" {
	bindsym f exec firefox
	bindsym f --release mode "default"

	bindsym g mode "steamLauncher"	
	bindsym g --release mode "default"

	bindsym s exec spotify
	bindsym s --release mode "default"

	bindsym w exec lowriter
	bindsym w --release mode "default"

	bindsym t exec teams
	bindsym Shift+t exec "killall teams"

	bindsym t --release mode "default"
	bindsym Shift+t --release mode "default"

	bindsym b exec "xterm -e btop"
	bindsym b --release mode "default"

	bindsym d exec discord
	bindsym d --release mode "default"

	bindsym c exec code
	bindsym c --release mode "default"

	bindsym Escape mode "default"
}

#bar {
#        i3bar_command i3bar -t #12345609
#}


set $screenShot 0

bindsym --release $mod+x exec --no-startup-id import /home/zonictrout/Pictures/Screenshots/latest-screenshot$screenShot.png 
#bindsym $mod+x set $screenShot $screenShot+1

# I3-Gaps
#############################
### settings for i3-gaps: ###
#############################

# Se inner/outer gaps
for_window [class="^.*"] border pixel 10
gaps inner 5
gaps outer 0

# Additionally, you can issue commands with the following syntax. This is useful to bind keys to changing the gap size.
# gaps inner|outer current|all set|plus|minus <px>
# gaps inner all set 10
# gaps outer all plus 5

# Smart gaps (gaps used if only more than one container on the workspace)
#smart_gaps on

# Smart borders (draw borders around container only if it is not the only container on this workspace) 
# on|no_gaps (on=always activate and no_gaps=only activate if the gap size to the edge of the screen is 0)
# smart_borders on

# Press $mod+Shift+g to enter the gap mode. Choose o or i for modifying outer/inner gaps. Press one of + / - (in-/decrement for current workspace) or 0 (remove gaps for current workspace). If you also press Shift with these keys, the change will be global for all workspaces.
set $mode_gaps Gaps: (o) outer, (i) inner
set $mode_gaps_outer Outer Gaps: +|-|0 (local), Shift + +|-|0 (global)
set $mode_gaps_inner Inner Gaps: +|-|0 (local), Shift + +|-|0 (global)
bindsym $mod+Shift+g mode "$mode_gaps"

mode "$mode_gaps" {
        bindsym o      mode "$mode_gaps_outer"
        bindsym i      mode "$mode_gaps_inner"
        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_inner" {
        bindsym plus  gaps inner current plus 5
        bindsym minus gaps inner current minus 5
        bindsym 0     gaps inner current set 0

        bindsym Shift+plus  gaps inner all plus 5
        bindsym Shift+minus gaps inner all minus 5
        bindsym Shift+0     gaps inner all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}
mode "$mode_gaps_outer" {
        bindsym plus  gaps outer current plus 5
        bindsym minus gaps outer current minus 5
        bindsym 0     gaps outer current set 0

        bindsym Shift+plus  gaps outer all plus 5
        bindsym Shift+minus gaps outer all minus 5
        bindsym Shift+0     gaps outer all set 0

        bindsym Return mode "default"
        bindsym Escape mode "default"
}


